name: Build and Release Executable

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      # 1. Checkout do Repositório
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Configurar Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'  # Substitua pela versão específica do Python que você está usando

      # 3. Instalar Dependências
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. Verificar Instalação do PyInstaller
      - name: Verify PyInstaller Installation
        run: |
          python -m PyInstaller --version

      # 5. Construir Executável com PyInstaller
      - name: Build Executable with PyInstaller
        run: |
          python -m PyInstaller --onefile script.py

      # 6. Listar Conteúdo da Pasta 'dist' para Depuração
      - name: List dist Directory After Build
        run: |
          dir dist
        shell: cmd

      # 7. Verificar Existência do Executável
      - name: Check if Executable Exists
        shell: pwsh
        run: |
          if (-not (Test-Path "dist\script.exe")) {
            Write-Output "Executable not found!"
            exit 1
          } else {
            Write-Output "Executable successfully created."
          }

      # 8. Criar Release e Anexar Executável
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1.8.1  # Use a versão mais recente da ação
        with:
          tag: v1.0.${{ github.run_number }}  # Defina a tag de acordo com sua convenção de versionamento
          name: Release v1.0.${{ github.run_number }}  # Nome da release
          draft: false
          prerelease: false
          files: dist/script.exe  # Caminho para o executável a ser anexado
